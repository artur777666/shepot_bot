from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from apscheduler.schedulers.asyncio import AsyncIOScheduler
import asyncio
import random

API_TOKEN = '7577091795:AAEYS5FeQHq1pJoQ1MQDsFHPgindn-t34fI'
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
scheduler = AsyncIOScheduler()

user_data = {}

signs = [
    "–û–≤–µ–Ω", "–¢–µ–ª–µ—Ü", "–ë–ª–∏–∑–Ω–µ—Ü—ã",
    "–†–∞–∫", "–õ–µ–≤", "–î–µ–≤–∞",
    "–í–µ—Å—ã", "–°–∫–æ—Ä–ø–∏–æ–Ω", "–°—Ç—Ä–µ–ª–µ—Ü",
    "–ö–æ–∑–µ—Ä–æ–≥", "–í–æ–¥–æ–ª–µ–π", "–†—ã–±—ã"
]

key_markup = ReplyKeyboardMarkup(resize_keyboard=True)
buttons = [KeyboardButton(sign) for sign in signs]
for i in range(0, len(buttons), 3):
    key_markup.add(*buttons[i:i+3])

@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    await message.reply("‚ú® –Ø ‚Äî –ñ—Ä–∏—Ü–∞ –®—ë–ø–æ—Ç–∞. –í—ã–±–µ—Ä–∏ —Å–≤–æ–π –∑–Ω–∞–∫, –∏ –∑–≤—ë–∑–¥—ã –∑–∞–≥–æ–≤–æ—Ä—è—Ç —Å —Ç–æ–±–æ–π:", reply_markup=key_markup)

@dp.message_handler(commands=["–≥–æ—Ä–æ—Å–∫–æ–ø"])
async def send_horoscope(message: types.Message):
    user_id = message.from_user.id
    sign = user_data.get(user_id)
    if not sign:
        await message.reply("–¢—ã –µ—â—ë –Ω–µ –æ—Ç–∫—Ä—ã–ª –∑–Ω–∞–º–µ–Ω–∏–µ. –í—ã–±–µ—Ä–∏ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –Ω–∏–∂–µ.")
    else:
        await message.reply(f"üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å ‚Äî –∏ —è –æ—Ç–≤–µ—á–∞—é. –°–µ–≥–æ–¥–Ω—è —Ç–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∏—â–µ—Ç –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–∏—Ö. –ù–µ —Å–ø–µ—à–∏. –£—Å–ª—ã—à—å.")

@dp.message_handler(commands=["–∫–∞—Ä—Ç–∞"])
async def send_card(message: types.Message):
    cards = {
        "–ü–ª–∞–º—è": "–°–µ–≥–æ–¥–Ω—è —Ç—ã –Ω–æ—Å–∏—à—å –≤ —Å–µ–±–µ –∏—Å–∫—Ä—É –ø–µ—Ä–µ–º–µ–Ω. –ù–µ —Ç—É—à–∏ –µ—ë —Å–æ–º–Ω–µ–Ω–∏—è–º–∏.",
        "–¢–µ–Ω—å": "–û—Ç–≤–µ—Ç –Ω–µ —Å–Ω–∞—Ä—É–∂–∏. –û–Ω —Å–ø—Ä—è—Ç–∞–Ω –≤ —Ç–æ–º, –æ—Ç —á–µ–≥–æ —Ç—ã –æ—Ç–≤–æ—Ä–∞—á–∏–≤–∞–ª—Å—è.",
        "–ú–æ—Å—Ç": "–ö—Ç–æ-—Ç–æ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ –¥—É–º–∞–µ—Ç –æ —Ç–µ–±–µ. –ú–æ—Å—Ç –µ—â—ë –Ω–µ —Å–≥–æ—Ä–µ–ª.",
        "–õ–µ—Å": "–¢—ã –∑–∞–±–ª—É–¥–∏–ª—Å—è –≤ –º—ã—Å–ª—è—Ö. –ò—Å—Ç–∏–Ω–∞ –ø—Ä–∏–¥—ë—Ç –ø–æ–∑–∂–µ.",
        "–õ—É–Ω–∞": "–ù–æ—á—å –æ—Ç–∫—Ä–æ–µ—Ç –∑–Ω–∞–∫–∏. –í–Ω–∏–º–∞–Ω–∏–µ –∫ —Å–Ω–∞–º –∏ —Å–ª—É—á–∞–π–Ω—ã–º —Å–ª–æ–≤–∞–º."
    }
    card = random.choice(list(cards.items()))
    await message.reply(f"üÉè –ö–∞—Ä—Ç–∞ —Å—É–¥—å–±—ã: *{card[0]}*\n_{card[1]}_\n\n‚Äî –ñ—Ä–∏—Ü–∞ –®—ë–ø–æ—Ç–∞", parse_mode="Markdown")

@dp.message_handler(commands=["–ª—É–Ω–∞"])
async def lunar_whisper(message: types.Message):
    await message.reply("üåò –°–µ–≥–æ–¥–Ω—è ‚Äî –≤–æ—Å—å–º–æ–π –ª—É–Ω–Ω—ã–π –¥–µ–Ω—å.\n–õ—É–Ω–∞ –≤ –í–µ—Å–∞—Ö. –ë–∞–ª–∞–Ω—Å –≤–∞–∂–Ω–µ–µ –ø—Ä–∞–≤–¥—ã. –î—ã—à–∏ –≥–ª—É–±–∂–µ.\n\n‚Äî –ñ—Ä–∏—Ü–∞ –®—ë–ø–æ—Ç–∞")

@dp.message_handler(lambda message: message.text in signs)
async def save_sign(message: types.Message):
    user_data[message.from_user.id] = message.text
    await message.reply(f"‚ú® –¢—ã –≤—ã–±—Ä–∞–ª –∑–Ω–∞–∫ {message.text}.\n–ù–∞–ø–∏—à–∏ /–≥–æ—Ä–æ—Å–∫–æ–ø, —á—Ç–æ–±—ã —É—Å–ª—ã—à–∞—Ç—å, —á—Ç–æ —à–µ–ø—á—É—Ç –∑–≤—ë–∑–¥—ã.")

async def daily_broadcast():
    for user_id, sign in user_data.items():
        try:
            await bot.send_message(user_id, f"üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å ‚Äî –∏ —è –æ—Ç–≤–µ—á–∞—é. –°–µ–≥–æ–¥–Ω—è —Ç–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∏—â–µ—Ç –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–∏—Ö. –ù–µ —Å–ø–µ—à–∏. –£—Å–ª—ã—à—å.")
        except Exception:
            continue

async def on_startup(dp):
    scheduler.add_job(daily_broadcast, "cron", hour=9, minute=0)
    scheduler.start()

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup)


@dp.message_handler(commands=["–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"])
async def publish_to_channel(message: types.Message):
    if message.from_user.id == message.chat.id:
        await bot.send_message("@shepotzvezd_rus", "üîÆ –ü–æ—Å–ª–∞–Ω–∏–µ –ñ—Ä–∏—Ü—ã:\n–°–µ–≥–æ–¥–Ω—è ‚Äî –¥–µ–Ω—å –∏–Ω—Ç—É–∏—Ü–∏–∏.\n–ü—Ä–∏—Å–ª—É—à–∞–π—Å—è –∫ –∑–Ω–∞–∫–∞–º –∏ –Ω–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π —Å–ª—É—á–∞–π–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è.")
        await message.reply("‚úÖ –ü–æ—Å–ª–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª.")
